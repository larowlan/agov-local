<!--
  name: build.xml
  description: The main project build file for phing operations. This file can
               be overridden with project specific configuration.
-->

<project name="agov-local" default="prepare" phingVersion="2.4.11">

  <!--               -->
  <!--  Properties   -->
  <!-- ============= -->

  <!-- Drupal -->
  <property name="drupal.siteName" value="&quot;Drupal 7 Site&quot;" />
  <property name="drupal.email" value="user@example.com" />
  <property name="drupal.user" value="admin" />
  <property name="drupal.pass" value="power" />
  <property name="drupal.dir" value="${project.basedir}/app" />
  <property name="drupal.themename" value="custom" />
  <property name="custom.themedir" value="${project.basedir}/app/sites/all/themes/custom/${drupal.themename}" />

  <!-- Mysql -->
  <property name="mysql.host" value="agov.dev" />
  <property name="mysql.port" value="3306" />
  <property name="mysql.database" value="agov" />
  <property name="mysql.user" value="agov" />
  <property name="mysql.pass" value="agov" />
  <property name="mysql.queryString" value="mysql://${mysql.user}:${mysql.pass}@${mysql.host}/${mysql.database}" />

  <!-- Drush -->
  <property name="drush.cmd" value="bin/drush -r ${drupal.dir}" />

  <!-- Vagrant -->
  <property name="vagrant.dir" value="/vagrant" />

  <!-- Globals for exec commands. The main goal of these were for fast failing the bot. -->
  <property name="test.output" value="true" />
  <property name="test.passthru" value="true" />

  <!-- Provide overrides. -->
  <property file="build.properties" override="true" />

  <!--         -->
  <!-- Targets -->
  <!-- ======= -->

  <!-- Prepare the project -->
  <target name="prepare"
          description="Prepare for build">
    <exec command="composer install --prefer-dist"
          logoutput="${test.output}"
          passthru="${test.passthru}" />
  </target>

  <!-- Runs a command in the Vagrant host -->
  <target name="vagrant:run"
          if="drush.cmd"
          description="Run a command in the vagrant host.">
    <exec command="vagrant ssh -c '${vagrant.cmd}'"
          logoutput="${test.output}"
          passthru="${test.passthru}" />
  </target>

  <!-- Reinstall the site. -->
  <target name="reinstall"
          depends="prepare"
          description="Reinstall the Drupal site (warning removes all files/database).">
    <!-- Drop and create the database -->
    <exec command="${drush.cmd} sql-drop -y"
          logoutput="${test.output}"
          passthru="${test.passthru}"/>

    <!-- Ensure the files directory is clean -->
    <exec command="sudo rm -fR ${drupal.dir}/sites/default/files/*"
          logoutput="${test.output}"
          passthru="${test.passthru}" />

    <!-- Ensure we have a fresh settings.php with correct permissions -->
    <exec command="sudo scp ${drupal.dir}/sites/default/default.settings.php ${drupal.dir}/sites/default/settings.php"
          logoutput="${test.output}"
          passthru="${test.passthru}" />
    <exec command="sudo chmod 777 ${drupal.dir}/sites/default/settings.php"
          logoutput="${test.output}"
          passthru="${test.passthru}" />

    <!-- Install the site and simpletest -->
    <phingcall target="install" />
  </target>

  <!-- Install the Drupal site. -->
  <target name="install"
          description="Install the Drupal site.">
    <phingcall target="vagrant:run">
      <!-- After some properties for inside the Vagrant host. -->
      <property name="vagrant.cmd" value="cd ${vagrant.dir}; bin/drush -r ${vagrant.dir}/app site-install agov -y --db-url=${mysql.queryString} --account-mail=${drupal.email} --account-name=${drupal.user} --account-pass=${drupal.pass} --site-name=${drupal.siteName}" />
    </phingcall>
    <phingcall target="vagrant:run">
      <!-- After some properties for inside the Vagrant host. -->
      <property name="vagrant.cmd" value="cd ${vagrant.dir}; bin/drush -r ${vagrant.dir}/app -l ${app.uri} uli" />
    </phingcall>
  </target>

  <!-- Enable Simpletest module -->
  <target name="simpletest:enable"
          description="Enable the Testing module.">
    <phingcall target="vagrant:run">
      <!-- After some properties for inside the Vagrant host. -->
      <property name="vagrant.cmd" value="cd ${vagrant.dir}; bin/drush -r ${vagrant.dir}/app en -y simpletest" />
    </phingcall>
  </target>

    <!-- Enable Views dev settings -->
  <target name="views_ui:enable"
          description="Enable the Views UI module.">
    <phingcall target="vagrant:run">
       <!-- After some properties for inside the Vagrant host. -->
      <property name="vagrant.cmd" value="cd ${vagrant.dir}; bin/drush -r ${vagrant.dir}/app en -y views_ui" />
    </phingcall>
    <phingcall target="vagrant:run">
      <!-- After some properties for inside the Vagrant host. -->
      <property name="vagrant.cmd" value="cd ${vagrant.dir}; bin/drush -r ${vagrant.dir}/app views-dev" />
    </phingcall>
  </target>

  <!--                 -->
  <!-- Compass targets -->
  <!-- =============== -->

  <target name="compass:compile"
          depends="compass:clean"
          description="Compile all sass files for production">
    <exec command="bundle exec compass compile -e production --force ${project.basedir}/${custom.themedir}"
          passthru="${test.passthru}" />
  </target>

  <target name="compass:watch"
          depends="compass:clean"
          description="Watch sass directories for changes and compile files on change">
    <exec command="bundle exec compass watch -e development ${project.basedir}/${custom.themedir}"
          passthru="${test.passthru}" />
  </target>
  <target name="compass:clean"
          description="Cleanup compass files">
    <exec command="bundle exec compass clean ${project.basedir}/${custom.themedir}"
          passthru="${test.passthru}" />
  </target>

</project>
